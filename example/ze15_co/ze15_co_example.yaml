esphome:
  name: co-monitor
  friendly_name: Carbon Monoxide Monitor
  platform: ESP32
  board: esp32dev

wifi:
  ssid: "YourWiFiSSID"
  password: "YourWiFiPassword"

logger:
  level: INFO

api:
ota:

# UART configuration for ZE15-CO
uart:
  id: uart_ze15
  tx_pin: GPIO17  # Connect to sensor RX (required for Q&A mode)
  rx_pin: GPIO16  # Connect to sensor TX
  baud_rate: 9600

sensor:
  ### Example 1: Initiative Mode (Real-time monitoring)
  # No update_interval = data every second
  - platform: ze15_co
    uart_id: uart_ze15
    co:
      name: "CO Real-time"
      id: co_realtime
      filters:
        - sliding_window_moving_average:
            window_size: 10
            send_every: 10

  ### Example 2: Q&A Mode (Power efficient)
  # With update_interval = Q&A mode
  - platform: ze15_co
    uart_id: uart_ze15
    update_interval: 60s  # This enables Q&A mode
    co:
      name: "CO Q&A Mode"
      id: co_qa
    sensor_fault:
      name: "CO Sensor Fault"

# Note the difference:
# 1. Without update_interval: Receives Initiative data every second
# 2. With update_interval: Only receives Q&A responses at specified interval

binary_sensor:
  # Can be used with either mode
  - platform: ze15_co
    uart_id: uart_ze15
    sensor_fault:
      name: "CO Sensor Status"
      entity_category: diagnostic

text_sensor:
  - platform: template
    name: "CO Level Status"
    lambda: |-
      if (id(co_realtime).state < 30) {
        return {"Normal"};
      } else if (id(co_realtime).state < 50) {
        return {"Warning"};
      } else {
        return {"Danger"};
      }
    update_interval: 5s

# Configuration comparison:
# 
# Real-time monitoring (Initiative mode):
#   sensor:
#     - platform: ze15_co
#       co:
#         name: "CO Level"
#
# Periodic monitoring (Q&A mode):
#   sensor:
#     - platform: ze15_co
#       update_interval: 2min  # Any value â‰¥ 5s
#       co:
#         name: "CO Level"